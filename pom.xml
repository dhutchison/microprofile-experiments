<?xml version="1.0" encoding="UTF-8" ?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.devwithimagination.microprofile</groupId>
  <artifactId>experiments</artifactId>
  <version>0.2</version>
  <packaging>war</packaging>
  <properties>
    <failOnMissingWebXml>false</failOnMissingWebXml>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
    <maven.failsafe.version>2.22.2</maven.failsafe.version>
    <arquillian.version>1.1.14.Final</arquillian.version>
    <cxf.client.version>3.3.3</cxf.client.version>
    <mp.rest.client.version>1.3.3</mp.rest.client.version>
    <payara.version>5.192</payara.version>
    <payaramicro.maven.plugin.version>1.0.5</payaramicro.maven.plugin.version>
  </properties>
  <distributionManagement>
    <repository>
      <id>nexus</id>
      <name>maven-releases</name>
      <url>https://nexus.lan.davidhutchison.scot/repository/maven-releases/</url>
    </repository>
    <snapshotRepository>
      <id>nexus</id>
      <name>maven-snapshots</name>
      <url>https://nexus.lan.davidhutchison.scot/repository/maven-snapshots/</url>
    </snapshotRepository>
  </distributionManagement>
  <dependencies>
    <dependency>
      <groupId>org.eclipse.microprofile</groupId>
      <artifactId>microprofile</artifactId>
      <version>2.1</version>
      <type>pom</type>
      <scope>provided</scope>
    </dependency>
    <!-- Additional JCache API -->
    <dependency>
      <groupId>javax.cache</groupId>
      <artifactId>cache-api</artifactId>
      <version>1.0.0</version>
      <scope>provided</scope>
    </dependency>
    
    <!-- For generating fake test data -->
    <dependency>
      <groupId>com.github.javafaker</groupId>
      <artifactId>javafaker</artifactId>
      <version>0.12</version>
    </dependency>


    <!-- Testing -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.nimbusds</groupId>
      <artifactId>nimbus-jose-jwt</artifactId>
      <version>5.7</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.core</groupId>
      <artifactId>jersey-client</artifactId>
      <version>2.25.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcpkix-jdk15on</artifactId>
      <version>1.53</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-rs-mp-client</artifactId>
      <version>${cxf.client.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.microprofile.rest.client</groupId>
      <artifactId>microprofile-rest-client-api</artifactId>
      <version>${mp.rest.client.version}</version>
    </dependency>
  </dependencies>
  <build>
    <finalName>${project.artifactId}</finalName>
  </build>
  <profiles>
    <profile>
      <id>payara-micro</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>fish.payara.maven.plugins</groupId>
            <artifactId>payara-micro-maven-plugin</artifactId>
            <version>${payaramicro.maven.plugin.version}</version>
            <executions>
              <execution>
                <id>package-payara</id>
                <phase>package</phase>
                <goals>
                  <goal>bundle</goal>
                </goals>
              </execution>
              <execution>
                <id>start-payara</id>
                <goals>
                  <goal>start</goal>
                </goals>
              </execution>
              <execution>
                <id>pre-integration-payara</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
                <configuration>
                  <daemon>true</daemon>
                </configuration>
              </execution>
              <execution>
                <id>post-integration-payara</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <payaraVersion>${payara.version}</payaraVersion>

              <deployWar>true</deployWar>

              <contextRoot>/</contextRoot>

              <javaCommandLineOptions>
                <!-- Java 9+ options -->
                <option>
                  <key>--add-opens</key>
                  <value>java.base/jdk.internal.loader=ALL-UNNAMED</value>
                </option>
                <option>
                  <key>--add-opens</key>
                  <value>jdk.management/com.sun.management.internal=ALL-UNNAMED</value>
                </option>
                <option>
                  <key>--add-exports</key>
                  <value>java.base/jdk.internal.ref=ALL-UNNAMED</value>
                </option>
                <option>
                  <key>--add-opens</key>
                  <value>java.base/java.lang=ALL-UNNAMED</value>
                </option>
                <option>
                  <key>--add-opens</key>
                  <value>java.base/java.nio=ALL-UNNAMED</value>
                </option>
                <option>
                  <key>--add-opens</key>
                  <value>java.base/sun.nio.ch=ALL-UNNAMED</value>
                </option>
                <option>
                  <key>--add-opens</key>
                  <value>java.management/sun.management=ALL-UNNAMED</value>
                </option>
                <option>
                  <key>--add-opens</key>
                  <value>java.base/sun.net.www.protocol.jrt=ALL-UNNAMED</value>
                </option>
              </javaCommandLineOptions>
            </configuration>
          </plugin>
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${maven.failsafe.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
                <configuration>
                  <includes>
                    <include>**/*IT</include>
                    <include>**/*IntegrationTest</include>
                  </includes>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>${maven.failsafe.version}</version>
        <reportSets>
          <reportSet>
            <id>integration-tests</id>
            <reports>
              <report>failsafe-report-only</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>

</project>